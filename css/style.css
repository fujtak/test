/*! destyle.css v3.0.2 | MIT License | https://github.com/nicolas-cusan/destyle.css */
/* Reset box-model and set borders */
/* ============================================ */
*,
::before,
::after {
  box-sizing: border-box;
  border-style: solid;
  border-width: 0;
}

/* Document */
/* ============================================ */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 * 3. Remove gray overlay on links for iOS.
 */
html {
  line-height: 1.15; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
  -webkit-tap-highlight-color: transparent; /* 3*/
}

/* Sections */
/* ============================================ */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block;
}

/* Vertical rhythm */
/* ============================================ */
p,
table,
blockquote,
address,
pre,
iframe,
form,
figure,
dl {
  margin: 0;
}

/* Headings */
/* ============================================ */
h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
  margin: 0;
}

/* Lists (enumeration) */
/* ============================================ */
ul,
ol {
  margin: 0;
  padding: 0;
  list-style: none;
}

/* Lists (definition) */
/* ============================================ */
dt {
  font-weight: bold;
}

dd {
  margin-left: 0;
}

/* Grouping content */
/* ============================================ */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box; /* 1 */
  height: 0; /* 1 */
  overflow: visible; /* 2 */
  border-top-width: 1px;
  margin: 0;
  clear: both;
  color: inherit;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace; /* 1 */
  font-size: inherit; /* 2 */
}

address {
  font-style: inherit;
}

/* Text-level semantics */
/* ============================================ */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
  text-decoration: none;
  color: inherit;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  text-decoration: underline dotted; /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace; /* 1 */
  font-size: inherit; /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Replaced content */
/* ============================================ */
/**
 * Prevent vertical alignment issues.
 */
svg,
img,
embed,
object,
iframe {
  vertical-align: bottom;
}

/* Forms */
/* ============================================ */
/**
 * Reset form fields to make them styleable.
 * 1. Make form elements stylable across systems iOS especially.
 * 2. Inherit text-transform from parent.
 */
button,
input,
optgroup,
select,
textarea {
  -webkit-appearance: none; /* 1 */
  appearance: none;
  vertical-align: middle;
  color: inherit;
  font: inherit;
  background: transparent;
  padding: 0;
  margin: 0;
  border-radius: 0;
  text-align: inherit;
  text-transform: inherit; /* 2 */
}

/**
 * Reset radio and checkbox appearance to preserve their look in iOS.
 */
[type=checkbox] {
  -webkit-appearance: checkbox;
  appearance: checkbox;
}

[type=radio] {
  -webkit-appearance: radio;
  appearance: radio;
}

/**
 * Correct cursors for clickable elements.
 */
button,
[type=button],
[type=reset],
[type=submit] {
  cursor: pointer;
}

button:disabled,
[type=button]:disabled,
[type=reset]:disabled,
[type=submit]:disabled {
  cursor: default;
}

/**
 * Improve outlines for Firefox and unify style with input elements & buttons.
 */
:-moz-focusring {
  outline: auto;
}

select:disabled {
  opacity: inherit;
}

/**
 * Remove padding
 */
option {
  padding: 0;
}

/**
 * Reset to invisible
 */
fieldset {
  margin: 0;
  padding: 0;
  min-width: 0;
}

legend {
  padding: 0;
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the outline style in Safari.
 */
[type=search] {
  outline-offset: -2px; /* 1 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Fix font inheritance.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/**
 * Clickable labels
 */
label[for] {
  cursor: pointer;
}

/* Interactive */
/* ============================================ */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/*
 * Remove outline for editable content.
 */
[contenteditable]:focus {
  outline: auto;
}

/* Tables */
/* ============================================ */
/**
1. Correct table border color inheritance in all Chrome and Safari.
*/
table {
  border-color: inherit; /* 1 */
  border-collapse: collapse;
}

caption {
  text-align: left;
}

td,
th {
  vertical-align: top;
  padding: 0;
}

th {
  text-align: left;
  font-weight: bold;
}

p {
  line-height: 1.5em;
}

input {
  width: 100%;
  font-size: 16px;
}

textarea {
  width: 100%;
  resize: none;
  font-size: 16px;
}

button {
  display: block;
  width: fit-content;
  max-width: 100%;
  cursor: pointer;
  user-select: none;
  text-align: center;
}

img {
  display: inline-block;
  width: 100%;
  height: auto;
}

.-bgc_main {
  background-color: #fc5200 !important;
}

.-bgc_black {
  background-color: #000;
}

.-color_main {
  color: #fc5200 !important;
}

.-color_secondary {
  background-color: #eee !important;
}

.-color_white {
  color: #fff;
}

.-color_red {
  color: red !important;
}

.-hidden {
  display: none !important;
}

.-wide {
  padding-left: 16px !important;
  padding-right: 16px !important;
}

.-tension_xm {
  margin: 0 auto !important;
  max-width: 720px !important;
}

.-tension_m {
  margin: 0 auto !important;
  max-width: 1000px !important;
}

.-tension_l {
  margin: 0 auto !important;
  max-width: 1224px !important;
}

.-mt16 {
  margin-top: 16px !important;
}

.-ml16 {
  margin-left: 16px !important;
}

.-mb8 {
  margin-bottom: 8px !important;
}

.-mb16 {
  margin-bottom: 16px !important;
}

.-mb24 {
  margin-bottom: 24px !important;
}

.-mb32 {
  margin-bottom: 32px !important;
}

.-mb64 {
  margin-bottom: 64px !important;
}

.-ml32 {
  margin-left: 32px !important;
}

.-m32auto {
  margin: 32px auto;
}

.link-default {
  color: -webkit-link;
  text-decoration-line: underline;
  cursor: pointer;
}

.btn-main {
  color: #fff;
  background-color: #ed7a2f;
  box-shadow: 0 4px 0 #fc5200;
  padding: 12px 24px;
  border-radius: 4px;
}
.btn-main:active {
  transform: translateY(4px);
  box-shadow: none;
}
.btn-main:disabled {
  color: #000;
  background-color: #fff;
  border: 1px solid;
  box-shadow: none;
  opacity: 0.3;
}
.btn-main:disabled:active {
  transform: none;
}

.btn-normal {
  padding: 0.5em 1em;
  border-radius: 4px;
  border: 1px solid;
  transition: transform 0.2s;
}
.btn-normal:hover {
  opacity: 0.5;
}
.btn-normal:disabled {
  opacity: 0.2;
}

.input-main {
  font-size: 16px;
  line-height: 1;
  padding: 8px 16px;
  border: 1px solid #ccc;
  border-radius: 4px;
}
.input-main:focus {
  border: 1px solid #000;
}

.navbar {
  display: flex;
}
.navbar__item {
  display: grid;
  place-content: center;
}
.navbar__item:hover {
  border-bottom: 1px solid;
  transform: translateY(1px);
}
.navbar__item + .navbar__item {
  margin-left: 16px;
}
.navbar__link {
  padding: 8px;
}

.table {
  width: 100%;
  table-layout: auto;
  border-collapse: collapse;
  overflow: auto;
}

.table thead {
  background-color: #f0f0f5;
}

.table thead th {
  font-weight: bold;
}

.table thead th,
.table tbody td {
  padding: 12px;
  text-align: center;
}

.table tbody tr:nth-child(even) {
  background-color: #f7f7fa;
}

.contents-formatter {
  padding: 64px 0;
}

.page-wrapper {
  min-height: 100vh;
  padding-bottom: 64px;
  position: relative;
}

.header {
  height: 80px;
  background-color: #eee;
}
.header__container {
  height: 100%;
  display: flex;
  justify-content: space-between;
  align-items: center;
}
.header__title {
  justify-content: flex-start;
  font-size: 28px;
}

.header__subheader {
  justify-content: flex-end;
  display: flex;
}
.header__navbar {
  display: flex;
}

.footer {
  width: 100%;
  height: 64px;
  position: absolute;
  bottom: 0;
  background-color: #eee;
}
.footer__container {
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.result {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.result__title {
  font-size: 20px;
}

.result__link {
  font-size: 20px;
}

.circles-and-form-wrapper {
  width: 100%;
  min-height: calc(100vh - 144px - 64px);
  position: relative;
  overflow: visible;
}
.circles {
  position: absolute;
  top: 50%;
  left: 48px;
  transform: translateY(-50%);
  display: flex;
}

.form-wrapper {
  max-width: fit-content;
  position: absolute;
  top: 50%;
  right: 32px;
  transform: translateY(-50%);
}

.circle {
  width: 15vw;
  max-width: 150px;
  height: 15vw;
  max-height: 150px;
  border-radius: 50%;
  border: 2px solid #ed7a2f;
}

.form {
  width: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding: 48px;
  background-color: #fff;
  border: 1px solid #000;
}
.form__title {
  font-size: 20px;
  line-height: 1.5;
  text-align: center;
}

.form__input {
  width: 250px;
}

.form__btn-submit {
  font-size: 20px;
}

.join {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.join-title {
  display: grid;
  place-content: center;
}
.join-title__body {
  font-size: 28px;
}

.join .join__btn-submit {
  font-size: 20px;
}

.process {
  display: flex;
  flex-direction: column;
}
.process__title {
  width: fit-content;
  align-self: center;
  font-size: 24px;
}

.process-index {
  display: flex;
  flex-direction: column;
  padding-top: 32px;
  padding-right: 64px;
  padding-bottom: 32px;
  padding-left: 64px;
  background-color: whitesmoke;
  border-radius: 16px;
  margin-bottom: 64px;
}
.process-index__list {
  display: flex;
  flex-direction: column;
}
.process-index__item {
  position: relative;
  line-height: 1.5;
  padding-top: 0;
  padding-right: 4px;
  padding-bottom: 0;
  padding-left: 28px;
  margin-bottom: 16px;
  color: gray;
}
.process-index__item-number {
  position: absolute;
  left: 0;
  top: 50%;
  transform: translateY(-50%);
  color: #000;
  font-size: 20px;
}

.process-index__item-link {
  display: inline-block;
  line-height: 1.5;
}

.process-index__item:last-child {
  margin-bottom: 0;
}
.process-step {
  margin-bottom: 64px;
}
.process-step__title {
  position: relative;
  width: 100%;
  padding-top: 16px;
  padding-left: 28px;
  padding-bottom: 16px;
  padding-right: 28px;
  font-size: 20px;
  background-color: whitesmoke;
  color: gray;
  border-left: 8px solid #ed7a2f;
  border-radius: 8px;
  margin-bottom: 16px;
}

.process-step__text {
  margin-left: 24px;
}

.process-step__text + .process-step__text {
  margin-top: 16px;
}

.process-step__img {
  width: 100%;
  height: auto;
  margin-top: 16px;
}

.process-step:last-child {
  margin-bottom: 0;
}

.loading {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.loading__text {
  font-size: 20px;
}
@media screen and (max-width: 500px) {
  .header__navbar {
    display: none;
  }
  .form {
    padding: 16px;
  }
  .process-index {
    padding: 32px;
  }
}
@media screen and (max-width: 1000px) {
  .circles-and-form-wrapper {
    position: static;
    display: flex;
    justify-content: center;
    align-items: center;
  }
  .circles {
    display: none;
  }
  .form-wrapper {
    position: static;
    transform: none;
    margin: 0 auto;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
